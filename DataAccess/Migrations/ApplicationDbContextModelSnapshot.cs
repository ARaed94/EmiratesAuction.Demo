// <auto-generated />
using System;
using DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Modules.Core.Auction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Bids")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CurrentBid")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainHeroImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MakeAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MakeEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MakeId")
                        .HasColumnType("int");

                    b.Property<string>("ModelAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("TrimAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrimEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrimId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MakeId");

                    b.HasIndex("ModelId");

                    b.HasIndex("TrimId");

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("Entities.Modules.Core.AuctionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuctionId")
                        .HasColumnType("int");

                    b.Property<int>("AuctionPriorityId")
                        .HasColumnType("int");

                    b.Property<string>("BodyAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImagesCount")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Mileage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MinBidIncrement")
                        .HasColumnType("int");

                    b.Property<string>("SharingLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SharingMessageAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SharingMessageEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VatPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Vin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId")
                        .IsUnique();

                    b.ToTable("AuctionDetails");
                });

            modelBuilder.Entity("Entities.Modules.Lookups.Make", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("TitleAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Makes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 10, 26, 13, 11, 34, 286, DateTimeKind.Local).AddTicks(6688),
                            TitleAr = "أودي",
                            TitleEn = "Audi"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 10, 26, 13, 11, 34, 287, DateTimeKind.Local).AddTicks(3447),
                            TitleAr = "بنتلي",
                            TitleEn = "Bentley"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 10, 26, 13, 11, 34, 287, DateTimeKind.Local).AddTicks(3469),
                            TitleAr = "مكلارين",
                            TitleEn = "McLaren"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 10, 26, 13, 11, 34, 287, DateTimeKind.Local).AddTicks(3473),
                            TitleAr = "دودج",
                            TitleEn = "Dodge"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 10, 26, 13, 11, 34, 287, DateTimeKind.Local).AddTicks(3477),
                            TitleAr = "فيراري",
                            TitleEn = "Ferrari"
                        });
                });

            modelBuilder.Entity("Entities.Modules.Lookups.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("MakeId")
                        .HasColumnType("int");

                    b.Property<string>("TitleAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MakeId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 10, 26, 13, 11, 34, 288, DateTimeKind.Local).AddTicks(5810),
                            MakeId = 1,
                            TitleAr = "موديل 1",
                            TitleEn = "Model 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 10, 26, 13, 11, 34, 288, DateTimeKind.Local).AddTicks(6217),
                            MakeId = 2,
                            TitleAr = "موديل 2",
                            TitleEn = "Model 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 10, 26, 13, 11, 34, 288, DateTimeKind.Local).AddTicks(6233),
                            MakeId = 3,
                            TitleAr = "موديل 3",
                            TitleEn = "Model 3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 10, 26, 13, 11, 34, 288, DateTimeKind.Local).AddTicks(6238),
                            MakeId = 4,
                            TitleAr = "موديل 4",
                            TitleEn = "Model 4"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 10, 26, 13, 11, 34, 288, DateTimeKind.Local).AddTicks(6243),
                            MakeId = 5,
                            TitleAr = "موديل 5",
                            TitleEn = "Model 5"
                        });
                });

            modelBuilder.Entity("Entities.Modules.Lookups.Trim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("MakeId")
                        .HasColumnType("int");

                    b.Property<string>("TitleAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MakeId");

                    b.ToTable("Trims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 10, 26, 13, 11, 34, 288, DateTimeKind.Local).AddTicks(9550),
                            MakeId = 1,
                            TitleAr = "نوع 1",
                            TitleEn = "Trim 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 10, 26, 13, 11, 34, 288, DateTimeKind.Local).AddTicks(9944),
                            MakeId = 2,
                            TitleAr = "نوع 2",
                            TitleEn = "Trim 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 10, 26, 13, 11, 34, 288, DateTimeKind.Local).AddTicks(9960),
                            MakeId = 3,
                            TitleAr = "نوع 3",
                            TitleEn = "Trim 3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 10, 26, 13, 11, 34, 288, DateTimeKind.Local).AddTicks(9965),
                            MakeId = 4,
                            TitleAr = "نوع 4",
                            TitleEn = "Trim 4"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 10, 26, 13, 11, 34, 288, DateTimeKind.Local).AddTicks(9970),
                            MakeId = 5,
                            TitleAr = "نوع 5",
                            TitleEn = "Trim 5"
                        });
                });

            modelBuilder.Entity("Entities.Modules.Core.Auction", b =>
                {
                    b.HasOne("Entities.Modules.Lookups.Make", "Make")
                        .WithMany()
                        .HasForeignKey("MakeId");

                    b.HasOne("Entities.Modules.Lookups.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId");

                    b.HasOne("Entities.Modules.Lookups.Trim", "Trim")
                        .WithMany()
                        .HasForeignKey("TrimId");
                });

            modelBuilder.Entity("Entities.Modules.Core.AuctionDetail", b =>
                {
                    b.HasOne("Entities.Modules.Core.Auction", "Auction")
                        .WithOne("AuctionDetail")
                        .HasForeignKey("Entities.Modules.Core.AuctionDetail", "AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Modules.Lookups.Model", b =>
                {
                    b.HasOne("Entities.Modules.Lookups.Make", "Make")
                        .WithMany("Models")
                        .HasForeignKey("MakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Modules.Lookups.Trim", b =>
                {
                    b.HasOne("Entities.Modules.Lookups.Make", "Make")
                        .WithMany("Trims")
                        .HasForeignKey("MakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
